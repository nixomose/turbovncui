name: Build Debian Package

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential devscripts debhelper dh-python python3-all python3-setuptools imagemagick
        
    - name: Create dist directory
      run: |
        mkdir -p dist
        
    - name: Create icon
      run: |
        convert -size 256x256 xc:transparent -fill "#4CAF50" -draw "circle 128,128 128,64" -fill white -pointsize 48 -gravity center -annotate +0+0 "VNC" debian/turbovncui.png
        
    - name: Build Debian package
      run: |
        debuild -b -us -uc
        
    - name: Move all build artifacts to dist directory
      run: |
        mv ../turbovncui_*.deb dist/
        mv ../turbovncui_*.buildinfo dist/ 2>/dev/null || true
        mv ../turbovncui_*.changes dist/ 2>/dev/null || true
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: turbovncui-deb
        path: dist/turbovncui_*
        
    - name: List dist directory contents
      if: github.event_name == 'release'
      run: |
        echo "Contents of dist directory:"
        ls -la dist/
        
    - name: Find and upload .deb file
      if: github.event_name == 'release'
      run: |
        DEB_FILE=$(find dist/ -name "turbovncui_*.deb" | head -1)
        if [ -z "$DEB_FILE" ]; then
          echo "Error: No .deb file found in dist directory"
          ls -la dist/
          exit 1
        fi
        echo "Found .deb file: $DEB_FILE"
        cp "$DEB_FILE" /tmp/turbovncui.deb
        
    - name: Upload Release Assets
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: /tmp/turbovncui.deb
        asset_name: turbovncui.deb
        asset_content_type: application/vnd.debian.binary-package 